{
	"@metadata": {
		"authors": [
			"Anterdc99",
			"Liuxinyu970226"
		]
	},
	"012f3cfd29d66d76": "$1启用了登录。",
	"01a57dca3e44b680": "SSH公钥操作",
	"01ddf839b9f3551a": "添加PKCS8公钥文件至缓存是非常危险的。如果PKCS8文件已经编码了与指定公钥不同的公钥，那么攻击者可以使用它获得未经授权的访问能力。\n\n一般情况下，您只应该在ssh注册机损坏，且不便修复的开发环境中，并且只在您确定理解风险的情况下使用此操作。您永远不能缓存不是您自己生成的PKCS8文件。",
	"0204bd421ceca4cf": "此提供者（“$1”）已存在，并且您不能添加多于一个它的示例。您可以编辑现有提供者，或者您可以选择不同的提供者。",
	"02f02485ab679a90": "算法",
	"03b0e87b1da8286d": "撤除令牌",
	"04e1bc4ad686da44": "取消链接“$1”账户？",
	"073b62df31e79f51": "配置管理员账户",
	"09c780ef81249e5d": "必须验证电子邮件",
	"0bb627242dbb3c75": "SSH公钥类型",
	"0c30d0fd42d14ed7": "$1启用了自动登录。",
	"0cfb56349d612e0a": "无效的OAuth访问令牌",
	"0d455a4e2678fcac": "验证电子邮件",
	"0f8cbfaf9c7b37c1": "账户已注册或链接。",
	"1228ab62258a2cb8": "LDAP端口",
	"1578dfbb41dafd09": "TOTP代码",
	"16839ad806cecbc6": "OAuth消费者密钥",
	"19166f670db6efac": "LDAP用户名：",
	"1ac6a5f14dda8928": "允许登录：",
	"1b43b22fdb2a0fda": "错误账户",
	"1c956b4275eeb6f3": "安全警告",
	"21d183567cd41d08": "用“--id”指定OAuth客户端id。",
	"24d3e4fdd9a8e186": "优势",
	"2b681c0a24baff88": "Google",
	"35d0f5fbca4b84a0": "验证",
	"409f3527310237bb": "Asana",
	"42593f1394fb4f32": "没有链接账户",
	"430b38bf6daa7f91": "松弛",
	"445496ef6dccb69c": "公共SSH密钥",
	"4a3baef3d85cea02": "登录（$1）",
	"5392c950bdde4be7": "推特",
	"5cc41c2d9eefe7c2": "未安装",
	"5f4608d20544ae46": "OAuth应用密钥",
	"71b6a1901b0957e8": "链接LDAP账户",
	"7405cf0c3534b464": "要配置Slack OAuth，在此创建新的应用程序：\n\nhttps://api.slack.com/docs/sign-in-with-slack#create_slack_app\n\n当创建您的应用程序时，请使用这些设置：\n\n  - **重定向URI：**将此设置为：“$1”\n\n在完成配置后，复制**客户端ID**和**客户端密钥**至上方字段。（您也需要首先点击“新密钥”来配置客户端密钥。）",
	"790fa6145f9d5b89": "“$1”账户",
	"7b66c2d59b36bad1": "注销？",
	"893e26b5cbc31f3a": "OAuth应用ID",
	"9f1ca732e99864c2": "OAuth客户端“$1”已被信任。",
	"adc4d67aabd39ede": "**第2步，共2步**：在此步骤中，您将会配置JIRA。\n\n**创建一个JIRA应用程序**：Log into JIRA and go to **Administration**, then **Add-ons**, then **Application Links**. Click the button labeled **Add Application Link**, and use these settings to create an application:\n\n  - **Server URL**: `$1`\n  - Then, click **Next**. On the second page:\n  - **Application Name**: `$2`\n  - **Application Type**: `Generic Application`\n  - Then, click **Create**.\n\n**Configure Your Application**: Find the application you just created in the table, and click the **Configure** link under **Actions**. Select **Incoming Authentication** and click the **OAuth** tab (it may be selected by default). Then, use these settings:\n\n  - **Consumer Key**: Set this to the \"Consumer Key\" value in the form above.\n  - **Consumer Name**: `$3`\n  - **Public Key**: Set this to the \"Public Key\" value in the form above.\n  - **Consumer Callback URL**: `$4`\nClick **Save** in JIRA. Authentication should now be configured, and this provider should work correctly.",
	"b4ea437c98c09ec9": "已恢复一般安全性",
	"d527bf3db3dc8af6": "登录",
	"da91c401e6f2b112": "您刚刚进行身份验证的外部服务（“$1”）未配置为允许在此服务器上登录。管理员最近可能禁用了它。",
	"db5f7f275fe9cd24": "**第2/2步——配置OAuth服务器**\n\n要配置OAuth，请在此创建新的应用程序：\n\n$1/oauthserver/client/create/\n\n当创建您的应用程序时，请使用这些设置：\n\n  - **重定向URI：**将此设置为“$2”\n\n在完成配置后，复制**客户端ID**和**客户端密钥**至上方字段。（您也需要首先点击“新密钥”来生成客户端密钥。）",
	"eb5a5df035b45a29": "$1账户"
}
