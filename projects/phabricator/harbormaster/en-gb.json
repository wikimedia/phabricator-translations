{
	"@metadata": {
		"authors": [
			"Dreamy Jazz",
			"Reedy"
		]
	},
	"061909a6815ed63d": "Behaviour: $1",
	"0910a821892ecec6": "Log Not Finalised",
	"1458ffedd0eb2844": "Organisation Name",
	"1ce0fce6432e7ab4": "You can use this method to send control commands to Buildables and Builds.\n\nThis table summarises which object types may receive control commands:\n\n<table>\n  <tr>\n    <th>Object Type</th>\n    <th>PHID Example</th>\n    <th />\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>Harbormaster Buildable</td>\n    <td>`PHID-HMBB-...`</td>\n    <td>{icon check color=green}</td>\n    <td>Buildables may receive control commands.</td>\n  </tr>\n  <tr>\n    <td>Harbormaster Build</td>\n    <td>`PHID-HMBD-...`</td>\n    <td>{icon check color=green}</td>\n    <td>Builds may receive control commands.</td>\n  </tr>\n  <tr>\n    <td>Harbormaster Build Target</td>\n    <td>`PHID-HMBT-...`</td>\n    <td>{icon times color=red}</td>\n    <td>You may **NOT** send control commands to build targets.</td>\n  </tr>\n</table>\n\nYou can send these commands:\n\n$1\n\nTo send a command message, specify the PHID of the object you would like to\nreceive the message using the `receiver` parameter, and specify the message\ntype using the `type` parameter.",
	"56fb21154566c7eb": "Optional namespace for this test. This is organisational and is often a class or module name, like \"ExampleTestCase\".",
	"65d468f03563d923": "Log \"$1\" is still live. Logs can not be finalised until they have closed.",
	"cb51ee9a67971fea": "If you run external builds, you can use this method to publish build results\nback into Harbormaster after the external system finishes work (or as it makes\nprogress).\n\nTo report build status or results, you must send a message to the appropriate\nBuild Target. This table summarises which object types may receive build status\nand result messages:\n\n<table>\n  <tr>\n    <th>Object Type</th>\n    <th>PHID Example</th>\n    <th />\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>Harbormaster Buildable</td>\n    <td>`PHID-HMBB-...`</td>\n    <td>{icon times color=red}</td>\n    <td>Buildables may **NOT** receive status or result messages.</td>\n  </tr>\n  <tr>\n    <td>Harbormaster Build</td>\n    <td>`PHID-HMBD-...`</td>\n    <td>{icon times color=red}</td>\n    <td>Builds may **NOT** receive status or result messages.</td>\n  </tr>\n  <tr>\n    <td>Harbormaster Build Target</td>\n    <td>`PHID-HMBT-...`</td>\n    <td>{icon check color=green}</td>\n    <td>Report build status and results to Build Targets.</td>\n  </tr>\n</table>\n\nThe simplest way to use this method to report build results is to call it once\nafter the build finishes with a `pass` or `fail` message. This will record the\nbuild result, and continue the next step in the build if the build was waiting\nfor a result.\n\nWhen you send a status message about a build target, you can optionally include\ndetailed `lint` or `unit` results alongside the message. See below for details.\n\nIf you want to report intermediate results but a build hasn't completed yet,\nyou can use the `work` message. This message doesn't have any direct effects,\nbut allows you to send additional data to update the progress of the build\ntarget. The target will continue waiting for a completion message, but the UI\nwill update to show the progress which has been made.\n\nWhen sending a message to a build target to report the status or results of\na build, your message must include a `type` which describes the overall state\nof the build. For example, use `pass` to tell Harbormaster that a build target\ncompleted successfully.\n\nSupported message types are:\n\n$1",
	"ecddfec1ffd473a8": "Edit Behaviour: $1"
}
